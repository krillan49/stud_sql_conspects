--                                    Устройство баз данных в PostgreSQL

-- database cluster - одна и более БД, управляемые из под одной инстанции сервера. Например когда мы устанавливаем PostgreSQL, то получаем кластер со специальными утилитарными БД
-- tamplate1 - утилитарная БД, которая используется для того чтобы создавать новые БД, она клонируется и из нее создается новая БД

-- Фаилы данных кластера лежат в директории data(часто называется PGDATA). PGDATA - это переменная окружения, указывающая на папку data, тоесть нужна для обращения к ней

-- Для каждой БД есть своя подпапка PGDATA/base

-- Для каждой таблицы и индекса выделяется отдельный фаил. Фаилы по умолчанию бьются по размеру 1Гб, если превышается, то создается еще 1 фаил, но это можно настроить



--                                       Устройство таблиц в PostgreSQL

-- Таблица(хранящаяся по умолчанию в фаилах по 1ГБ) состоит из массива страниц (каждая страница по умолчанию размером 8Кб)

-- Фаил таблицы называется Heap File (не имеет отношение к структуре данных "куча"), он содержит списки неупорядоченных записей различной длинны, структурирован как набор страниц, каждая из которых имеет множество строк



--                               Страницы и строки таблицы в PostgreSQL. TOAST. CTID

-- Каждая страница содержит: заголовок страницы и строки с их заголовками

-- Cтраницы по умолчанию 8Кб, но это не означает что на странице не может быть больших данных/значений превышающих эти 8кб
-- Хранить значения одной строки на разных страницах запрещено и не поддерживается сервером, потому если в строке какой-то страницы есть значение превышающее максимальный размер страницы, то оно обрабатывается при помощи механизма TOAST

-- TOAST - the oversized attribute storage technicue. Каждая таблица имеет ассоциированную с ней TOAST-таблицу, в которой хранятся большие значения, нарезанные кусками по 2Кб, а в столбце исходной таблицы помещается ссылка на место в TOAST-таблице, где хранится само значение

-- Страница содержит ссылки на строки (CTID). CTID состоит из пары значений: номера страницы и индекса, используя эту инфу PostgreSQL может быстро обращаться к данным находящимся в тех или иных местах



--                                          FSM и VM фаилы в PostgreSQL

-- Рядом с фаилом таблицы лежит фаил FSM (free space map). Имеет в своем названии суффикс FSM. Он хранит значения округленные до 1/256 от размера страницы, это 32 Байта при размере страницы 8Кб. Он используется для того чтобы сервер понимал куда можно сохранить данные определенных размеров

-- FSM не обновляется при каждом обновлении или удалении строк, тк при удалении и обновлении строки ее старая версия не исчезает сразу из памяти, чтобы поддерживать механизм конкурентного доступа к одним и тем же данным

-- Рядом с фаилом таблицы лежит фаил VM (visibility map/карта видимости), фаил имеет суффикс _VM. Эти фаилы хранят биты - 1 бит на страницу, который, если выставлен в значение 1 показывает, что страница не содержит "дохлых версий строк". Это служит для того чтобы сервер быстрее считывал данные



--                                  VACUUM. Проблема фрагментации данных в PostgreSQL

-- Если вообще не обслуживать БД, то фрагментация данных будет нарастать

-- VACUUM [FULL] - команда для очистки "дохлых" версий строк, тоесть как раз тех, что сразу не удалились из памяти. Эта команда не возвращает память операционной системе, тоесть не удаляет, а просто помечает отрезки памяти, как те которые можно перезаписывать новыми данными.

-- Необходим переодический запуск VACUUM. Активно обновляемые БД рекомендуется проходить с VACUUM каждую ночь

VACUUM      -- команда для очистки "дохлых" версий строк, обычно ее достаточно. Работает параллельно и не берет эксклюзивную блокировку
VACUUM FULL -- с этой опцией производит полный компактинг таблицы, те проведет сжатие таблицы и полную ее перезапись, это долго по времени и требует столько же памяти как и таблица к которой применили данную команду, потому производится редко. Берет эксклюзивную блокировку на чтение и запись таблицы. Потому используем только если удалили очень много данных

ANALYZE -- Собирает статистику о содержимом таблиц (например распределения данных) и сохраняет результаты в специальном системном каталоге pg_statistic, в результате планировщик запросов после этого может использовать статистику для того чтобы выполнить запрос наиболее эффективно. Если не задать никаких параметров то команда отработает по всем таблицам в текущей БД, нужно указать параметр чтобы пройтись только по конкретной таблице, можно так же задать и отдельные колонки, соотв статистика будет собрана только с них.

VACUUM ANALYZE -- можно запускать совместно

-- Autovacuum - демон\бэкграунд процесс - работает в фоне и делает все автоматически, его работа базируется на собираемой сервером статистики апдэйтов и удалений. Включается эвристически, включает множество настраиваемых параметров. По умолчанию включен и отключать его не рекомендуется. По умолчанию работает для всех таблиц в БД, но можно задать и отдельно конкретную














-- 
