--                                    Устройство баз данных в PostgreSQL

-- database cluster - одна и более БД, управляемые из под одной инстанции сервера. Например когда мы устанавливаем PostgreSQL, то получаем кластер со специальными утилилированными БД, например tamplate1, которая используется для того чтобы создавать новые БД, она клонируется и из нее создается новая БД

-- Фаилы данных кластера лежат в директории data(часто называется PGDATA). PGDATA - это переменная окружения, указывающая на папку data, тоесть нужна для обращения к ней

-- Для каждой БД есть своя подпапка PGDATA/base

-- Для каждой таблицы и индекса выделяется отдельный фаил. Фаили по умолчанию бьются по размеру 1Гб, если превышается, то создается еще 1 фаил, но это можно настроить



--                                       Устройство таблиц в PostgreSQL

-- Таблица(по умолчанию в фаилах по 1ГБ) состоит из массива страниц (блоков, по умолчанию размером 8Кб)

-- Фаил таблицы называется Heap File (не имеет отношение к структуре данных "куча"), он содержит списки неупорядоченных записей различной длинны, структурирован как набор страниц, каждая из которых имеет множество строке



--                                   Страницы и строки таблицы в PostgreSQL

-- Таблица размером 1Гб состоит из страниц по 8Кб, но это не означает что на странице не может быть больших данных/значений превышающих эти 8кб
-- Хранить значения одной строки на разных запрещено и не поддерживается сервером, потому если в строке какойто страницы есть значение превышающее максимальный размер страницы, то подобное обрабатывается при помощи механизма TOAST
-- TOAST - the oversized attribute storage technicue. Каждая таблица имеет ассоциированную с ней TOAST-таблицу, в которой хранятся большие значения, нарезанные кусками по 2Кб, а в столбце исходной таблицы помещается ссылка на место в TOAST-таблице, где хранится само значение

-- Каждая страница содержит: заголовок страницы, строки с их заголовками

-- Страница содержит ссылки на строки (CTID). CTID состоит из пары значений: номера страницы и индекса, используя эту инфу PostgreSQL может быстро обращаться к данным находящимся в тех или иных местах



--                                       FSM и команда VACUUM postgresql

-- Рядом с фаилом таблицы лежит фаил FSM (free space map). Имеет в своем названии суффикс FSM. Он хранит значения округленные до 1/256й от размера страницы, это 32 Байта при размере страницы 8Кб. Он используется для того чтобы сервер понимал куда можно сохранить данные определенных размеров

-- FSM не обновляется при каждом обновлении или удалении строк, тк при удалении и обновлении строки ее старая версия не исчезает сразу из памяти, чтобы поддерживать механизм конкурентного доступа к одним и тем же данным

VACUUM [FULL] -- команда для очистки "дохлых" версий строк, тоесть как раз тех, что сразу не удалились из памяти. Эта команда не возвращает память операционной системе, тоесть не удаляет, а просто помечает отрезки памяти, как те которые можно перезаписывать новыми данными.
-- FULL - такп проведет сжатие таблицы и полную ее перезапись, это долго по времени и требует столько же памяти как и таблица к которой применили данную команду. Потому производится редко

-- Рядом с фаилом таблицы лежит фаил VM(visibility map), фаил имеет суффикс _VM. Эти фаилы хранят биты - 1 бит на страницу, который, если выставлен в значение 1 показывает, что страница не содержит "дохлых версий строк". Это служит для того чтобы сервер быстрее считывал данные



--                                  VACUUM. Проблема фрагментации данных в PostgreSQL

-- Если вообще не обслуживать БД, то фрагментация данных будет нарастать

VACUUM -- команда для очистки "дохлых" версий строк, обычно ее достаточно. Работает параллельно и не берет эксклюзивную блокировку
VACUUM FULL -- производит полный компактинго таблицы. Берет эксклюзивную блокировку на чтение и запись таблицы. Потому используем если только удалили очень много данных

-- Необходим переодический запуск VACUUM. Активно обновляемые БД рекомендуется проходить VACUUM каждую ночь

ANALYZE -- Собирает статистику о содержимом таблиц и сохраняет результаты в специальном системном каталоге pgstatistic, в результате планировщик запросов после этого может использовать статистику для того чтобы выполнить запрос наиболее эффективно. Если не задать никаких параметров то команда отработает по всем таблицам в текущей БД, нужно указать параметр чтобы пройтись только по конкретной таблице, можно так же задать и отдельные колонки, соотв статистика будет собрана только с них.
-- Собирает статистику: например распределения данных

VACUUM ANALYZE -- можно запускать совместно

-- Autovacuum - демон\бэкграунд процесс - работает в фоне и делает все автоматически, его работа базируется на собираемой сервером статистики апдэйтов и удалений. Включается эвристически, включает множество настраиваемых параметров. По умолчанию включен и отключать его не рекомендуется. По умолчанию работает для всех таблиц в БД, но можно задать и отдельно конкретную



--                                 Индексы в PostgreSQL. Оптимизация выборки записей

-- Индекс - структура данных, ускоряющая выборку данных из таблицы за счет дополнительных операций записи и и использования дополнительного пространства на диске, используемых для хранения стуктуры данных и поддержания ее в актуальном состоянии

-- Индекс это объект базы данных, который можно создавать и удалять
-- Индекс позволяет искать значения без полного перебора строк и сокращать время поиска

-- Индекс устанавливает соотвествие между ключем являющимся обычно значением индексированного столбца и строками таблицы, в которых этот ключ встречается

-- Зная ключ или информацию о нем можно найти требуемую строку, не просмавтривая всю таблицу полностью




















--
