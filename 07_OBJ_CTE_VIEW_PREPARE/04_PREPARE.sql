--                                    PREPARE [PostgreSQL]. Параметризация запросов

-- https://www.postgresql.org/docs/current/sql-prepare.html      PREPARE
-- https://www.postgresql.org/docs/current/sql-execute.html      EXECUTE

-- Подготовленный оператор — это объект на стороне сервера, который можно использовать для оптимизации производительности. Позволяет избежать повторяющейся работы по синтаксическому анализу и написанию SQL операторов

-- Подготовленные операторы выгодны в производительности, когда один сеанс используется для выполнения большого количества похожих операторов, особенно если операторы сложны для написания, например, если запрос включает в себя соединение многих таблиц. Если оператор прост в написании, но дорог в исполнении, буст производительности будет менее заметным.

-- Подготовленные операторы действуют только в течение текущего сеанса базы данных. Когда сеанс завершается, подготовленный оператор забывается



--                                   Создание и исполнение подготовленного оператора

-- PREPARE - оператор создает подготовленный оператор. Когда PREPARE оператор выполняется, исполняемый оператор парсится, анализируется и перезаписывается

-- EXECUTE - оператор-команда для выполнения подготовленного оператора.

-- Имя подготовленного оператора должно быть уникальным в пределах сеанса базы данных

-- Подготовленные операторы PREPARE могут принимать параметры, они подставляются в оператор при его выполнении. При выполнении оператора нужно указать в операторе EXECUTE значения этих параметров.
-- $1, $2 итд - опозначение параметров для того чтобы к ним обращаться.
-- Если в PREPARE, указаны некоторые параметры, в EXECUTE должен быть передан совместимый набор параметров, иначе возникнет ошибка.
-- Можно указать список типов данных параметров. Если тип данных параметра не указан или объявлен как 'unknown', тип выводится из контекста, в котором параметр впервые упоминается (если это возможно).


-- PREPARE - создаем подготовленный оператор для INSERT запроса:
PREPARE fooplan (INT, TEXT, BOOL, NUMERIC) AS -- fooplan - имя подготовленного оператора, можно любое. Типы данных соотв параметрам
INSERT INTO foo VALUES($1, $2, $3, $4);       -- оператор в который подставим данные и будем выполнять при вызове подготовленного
-- EXECUTE - выполняем подготовленный оператор, обращаясь к его имени и передав конкретные параметры для его запроса
EXECUTE fooplan(1, 'Hunter Valley', 't', 200.00); -- параметры будут переданы в $1, $2, $3, $4 в соотвествии с порядком написания


-- Создаем подготовленный оператор для SELECT запроса:
PREPARE usrrptplan (INT) AS  -- тк тут тип данных 2го параметра не указан, то он возьмется из контекста, в котором используется $2
SELECT * FROM users u, logs l WHERE u.usrid = $1 AND u.usrid = l.usrid AND l.date = $2;
-- Выполняем подготовленный оператор передав конкретные параметры для его запроса
EXECUTE usrrptplan(1, current_date);

-- Вариант подготовленного оперетора для более стожного SELECT-запроса:
PREPARE find_groups_with_matching_employees(text) AS
WITH
  r AS (SELECT group_name, ARRAY_AGG(employee_id ORDER BY employee_id) AS employees FROM groups GROUP BY group_name),
  a AS (SELECT employees FROM r WHERE group_name = $1)
SELECT * FROM r WHERE group_name != $1 AND employees = (SELECT employees FROM a);
-- Выполняем подготовленный оператор передав конкретные параметры для его запроса
EXECUTE find_groups_with_matching_employees('a1');



--                              DEALLOCATE. Ручная очистка подготовленного оператора

-- Подготовленные операторы можно очистить вручную с помощью DEALLOCATE команды.













--
