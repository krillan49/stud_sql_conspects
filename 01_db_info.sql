--                                               Базы данных. Общая инфа

-- https://sql-academy.org/ru/handbook/LENGTH  справочник по функциям MySQL

-- https://habr.com/ru/articles/247373/  про индексы


-- Базы данных(БД) - это набор фаилов, хранилище данных, хранящиеся в структурированном виде.
-- Системы управленя базами данных(СУБД) - совокупность языковых и программных средств, которая осуществляет доступ к БД и данным, позволяет их создавать, менять и удалять, обеспечивает безопасность и т.д.
-- Когда мы вводим запрос(например SQL) то он идет в СУБД, она его обрабатывает, отсылает БД, берет оттуда данные и выдает нам.


-- 	1. Key-value базы данных(Redis, Memcached, Etcd):
-- Они хранят данные как совокупность пар «ключ-значение», в которых ключ это уникальный id. Ключи и значения могут представлять собой что угодно: от простых до сложных составных объектов.
-- Преимущества: Скорость работы; Простота модели хранения данных; Значения могут быть любыми, включая JSON;
-- Недостатки: Плохо масштабируются в сложных моделях данных; Неэффективность при работе с группой записей(на входе не имеем инфы кроме ключа); Нет языка запросов(логика зпросов будет в основном коде)

-- 	2. Документоориентированные базы данных(MongoDB, Couchbase, Firebase):
-- Хранение и запрос данных в виде документов, подобном JSON. Документ это набор атрибутов(ключ и значение). Значения могут быть любыми типами данных(в том числе и ссылки на другие документы)
-- Позволяет добавлять новую информацию в некоторые записи, не требуя при этом, чтобы все остальные записи в базе данных имели одинаковую структуру
-- Документы в базе данных адресуются с помощью уникального ключа, обычно это строка, которая генерируется автоматически.
-- Помимо простого поиска документов по ключу, как в key-value базах данных, они имеют и свой язык запросов. Функционал и синтаксис которого отличается от одной реализации к другой.
-- > db.users.find({"name": "Daniel"}).count()  (пример запроса в MongoDB)

-- 	3. Реляционные базы данных:
-- Информация хранится в связанных друг с другом таблицах. Таблицы состоят из строк/записей и столбцов/атрибутов. Каждый столбец имеет определённый тип данных(пр: VARCHAR INTEGER DATETIME)
-- а. Ключевое поле(первичный ключ)(обязателен, только один но может состоять из нескольких полей) – это поле, значение которого однозначно определяет запись в таблице.
-- С помощью данного правила СУБД не позволит нам создать новую запись, где id будет неуникальным.
-- б. Внешний ключ(необязателен, может быть несколько) – это поле в одной таблице, которое ссылается на первичный ключ в другой таблице.
-- Таблица с внешним ключом называется дочерней, а таблица с первичным ключом называется ссылочной или родительской(одна таблица может быть и той и другой одновременно).
-- Правило внешнего ключа гарантирует, что при создании записей в дочерней таблице, значение поля, являющегося внешним ключом, есть в родительской таблице.

-- Для работы с базой данных нам нужно знать язык этой базы данных. Базы данных бывают SQL либо NOSQL(not only).

-- SQL - Structured Query Language(язык структурированных запросов) - язык запросов к СУБД. Он формулирует запрос к БД и на основе запроса производит различные манипуляции внутри БД
-- SQL используется во множестве СУБД. Среди таковых можно выделить: MySQL, SQLite, PostgreSQL, Oracle, Microsoft SQL Server и многие другие.
-- Многие СУБД вносят свои изменения в язык SQL. Такие языки называют диалектами или расширениями языка(T-SQL – диалект Microsoft SQL Server, PL/SQL – диалект Oracle Database, PL/pgSQL – диалект PostgreSQL).
















--
