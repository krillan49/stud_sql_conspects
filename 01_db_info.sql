--                                               Базы данных

-- Базы данных(БД) - это набор фаилов, хранящих взаимосвязаннее данные в структурированном виде.

-- Системы управленя базами данных/Data base menegment systems (СУБД/DBMS) - программных средств для управления данными: отвечает за поддержку языка БД(например SQL), осуществляет доступ к БД и данным, позволяет их создавать, менять и удалять, обеспечивает безопасность, оптимизацию и т.д.
-- Когда мы вводим запрос (например SQL) то он идет в СУБД, она его обрабатывает, отсылает БД, берет оттуда данные и выдает нам.

-- Базы данных не принято коммитить в репозитории, тк Гит не понимает 2ичный формат БД и она при изменении будет целиком копироваться каждый коммит.

-- Самым простым видом БД могут быть просто фаилы с данными, например txt, json или xml. А самой простой СУБД прогрпмма создающая эти фаилы, читающая и записывающая данные в них.



--                                    Виды БД и СУБД по размещению и доступу.

-- 1. Фаил-серверные: Microsoft Access. Считаются устаревшими. БД хранятся централизованно на файл-сервере, а СУБД находится на каждом клиентском компьютере. Плюс - назкая нагрузка на фаил-сервер. Минусы - высокая загрузка локальной сети и невозможность обеспечения хорошей доступности, надежности и безопасности, не может справиться с очень большой нагрузкой.

-- 2. Клиент-серверные: MySQL, PostgreSQL, Oracle, MS SQL, MariaDB. Самые популярные. И БД и СУБД располагаются на сервере, а клиентские машины просто получают к ним доступ на обработку запросов. Вся нагрузка идет на сервер, а сервера имеют возможности высокой производительности и масштабирования. Обесбечивают высокое быстродействие, надежность и безопасность.

-- 3. Встраемые: SQLite. Более легковесные чем клиент-серверные и могут использоваться даже на смартфонах или быть встроенными в отдельные приложения. Не расчитаны на использование по сети и высокие нагрузки.



--                                Виды БД и СУБД по способухранения и обработки данных.

-- Бывают SQL либо NoSQL(not only).


-- 	1. Key-value базы данных(Redis, Memcached, Etcd) (NoSQL):
-- Key-value БД хранят данные как совокупность пар «ключ-значение», в которых ключ это уникальный id. Ключи и значения могут представлять собой что угодно: от простых до сложных составных объектов.
-- Преимущества: Скорость работы; Простота модели хранения данных; Значения могут быть любыми, включая JSON;
-- Недостатки: Плохо масштабируются в сложных моделях данных; Неэффективность при работе с группой записей (на входе не имеем инфы кроме ключа); Нет языка запросов(логика зпросов будет в основном коде)


-- 2. Документоориентированные базы данных(MongoDB, Couchbase, Firebase) (NoSQL):
-- Хранение и запрос данных в виде документов, подобном JSON. Документ это набор атрибутов(ключ и значение). Значения могут быть любыми типами данных(в том числе и ссылки на другие документы)
-- Позволяет добавлять новую информацию в некоторые записи, не требуя при этом, чтобы все остальные записи в базе данных имели одинаковую структуру
-- Документы в базе данных адресуются с помощью уникального ключа, обычно это строка, которая генерируется автоматически.
-- Помимо простого поиска документов по ключу, как в key-value базах данных, они имеют и свой язык запросов. Функционал и синтаксис которого отличается от одной реализации к другой.
-- > db.users.find({"name": "Daniel"}).count()  (пример запроса в MongoDB)


-- 	3. Реляционные базы данных (SQLite, MySQL, PostgreSQL, Oracle, MS SQL, MariaDB) (SQL):
-- Информация хранится в связанных друг с другом таблицах. Таблицы состоят из строк/записей и столбцов/атрибутов














--
