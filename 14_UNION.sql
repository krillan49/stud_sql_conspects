--                                Операции над множествами. UNION, INTERSECT, EXCEPT

-- UNION     - объединение множеств, на практике запросов как множеств строк
-- INTERSECT - пересечение множеств, на практике ищет общие строки у нескольких запросов
-- EXCEPT    - разница множеств, на практике возвращает записи одного запроса, которых нет в другом


--                                                UNION [ALL]

-- UNION [ALL] (Объединение результатов запросов) - объединяет результаты запросов в одну результирующую таблицу.

-- Чтобы UNION корректно сработал нужно чтобы результирующие таблицы каждого из SQL запросов имели одинаковое число столбцов в той же самой последовательности, с сопоставимыми типами данных(тоесть могут быть преобразованы друг в друга)
-- Если имена столбцов отличаются, то в результирующий набор попадут имена из 1го запроса

-- По умолчанию убирает повторения в результирующей таблице.
-- При использовании UNION СУБД проводит дополнительную работу тк после обработки и объединения запросов нужно еще раз пройтись по результату и удалить дубликаты, потому если мы уверены что пересечений нет лучше использовать UNION ALL

SELECT good_name AS name FROM Goods
UNION
SELECT member_name AS name FROM Family;
-- в один столбец name попадут и имена членов семьи и названия товаров

-- Например нам нужны все топовые фильмы, но по 2м разным критериям. Добавим так же столбец созданный из литерала, чтобы было понятно по какому критерию фильм попал в результат(так будет как будто UNION ALL, потому что у повторяющихся фильмов будет разное значение во 2м поле, тоесть это уже не дубликаты)
SELECT title, 'rating' AS src FROM films WHERE rating > 80
UNION
SELECT title, 'stars' AS src FROM films WHERE stars > 3;


-- UNION ALL не убирает дубликаты (не уберет дубликаты даже если добавить дистинкт в каждый запрос)
SELECT first_name, middle_name, last_name FROM Student
UNION ALL
SELECT first_name, middle_name, last_name FROM Teacher;
-- объединяем по столбцам ФИО строки данных учеников и учителей



--                                                 INTERSECT

-- INTERSECT (Пересечение запросов) Комбинирует два запроса SELECT, но возвращает только совпадающие записи первого и второго SELECT
SELECT country FROM customers
INTERSECT
SELECT country FROM suppliers;



--                                                EXCEPT [ALL]

-- EXCEPT (Исключение/разница запросов) Комбинирует два запроса SELECT, но возвращает только те записи первого SELECT, которые не имеют совпадения во втором элементе SELECT. Тоесть есть разница какой запрос ставить 1м. По умолчанию накладывает дистинкт на 1й запрос

-- Сначала выполняется 1й запрос, потом 2й, потом берутся все строки 1го запроса, которых нет во втором
SELECT country FROM customers
EXCEPT
SELECT country FROM suppliers;

-- EXCEPT ALL - дистинкт не наложен ни на 1 запрос, потому возвращает только те записи, которых нет в том запросе, в котором есть меньше дубликатов этой записи. Тоесть большее число дубликатов минус меньшее
SELECT country FROM customers
EXCEPT ALL
SELECT country FROM suppliers;



--                                    Комбинации из UNION, INTERSECT, EXCEPT

-- Разными операциями над множествами можно объединять более 2х запросов.

-- Если у нас много типов объединения, то сначало последовательно выполняются типы объединения UNION и EXEPT и только потом будет выполнен INTERSECT

SELECT country FROM customers
INTERSECT
SELECT country FROM suppliers
EXCEPT
SELECT country FROM employees;












--
