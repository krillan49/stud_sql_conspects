--                                              DBeaver

-- https://dbeaver.io/download/
-- https://www.youtube.com/watch?v=1c2ZZ3ZaOp0&list=PLzvuaEeolxkz4a0t4qhA0pxmttG8ZbBtd&index=2   - урок с установкой
-- При установке все можно оставить по умолчанию


-- DBeaver  - универсальный клиент для СУБД, подходит для любых СУБД


-- Подключение СУБД на примере PostgreSQL:
-- Чтобы подключиться находим свеху слева значек розетки с плюсом, нажимаем и откроется окно выбора СУБД, жмем "Next" (может открыться автоматически, то что скачались с драйвера для СУБД, нажать "download")
-- Далее в открывшемся окне устанавливаем параметры подключения к выбранной СУБД - можно ничего не менять, кроме указания имени и пароля которые мы указали при установке СУБД
-- Далее жмем "Test connection" и если все хорошо, то появляется маленькое окошко где написано "Connected" и версиями СУБД и драйверов. Жмем "OK"
-- Жмем "Finish"
-- Когда подключение создано, сверху слева в дереве будет значек PostgreSQL с зеленой галочной(значит подключено), открываем и видим все БД, со схемами и всем прочим


-- Чтобы добавить новую БД:
-- правой кнопкой нажимаем на значек подключенной СУБД -> 'Create' -> 'Database', даем имя и нажимаем 'OK'


-- Схемы:
-- Если мы раскрываем дерево конкретной БД в общем дереве то видим подветки, одна из них это 'Schemas' - тут располагаются таблицы и все данные, если раскрыть схемы то там будут располагаться подветки отдельных схем
-- Чтобы добавить новую схему, нажимаем правой кнопокой на 'Schemas' -> 'Create New Schema', даем имя и нажимаем 'OK'
-- Схемы можно использовать чтобы логически отделять друг от друга разные наборы данных, когда таблиц становится много, удобно группировать их по схемам (например у одного заказчика есть магазин видео и магазин мебели, то удобно использовать разные схемы, но если таблиц совсем много то можно сделать и отдельные БД). Так же в разные БД можно добавлять данные с разными требованиями, например одна группа данных требует быстродействия, а другая хранит множество данных жертвуя быстродействием
-- Можно посмотреть визуальное отображение схемы - правой кнопкой нажимаем на конкретную схему и выбираем 'View Schema' - откроется диаграма со всеми таблицами и связями, полями и типами данных
-- В подменю каждой таблицы можно помотреть имена колонок


-- Cкачивание и использование тестовой БД DVD Rental Sample Database для трени:
-- https://www.postgresqltutorial.com/postgresql-getting-started/postgresql-sample-database/
-- Нажимаем на 'Download DVD Rental Sample Database', далее разархивируем архив
-- Далее открываем DBeaver, правой кнопкой мыши нажимаем в дереве на 'public' в схемах нашей БД, нажимем 'tools' во всплывающем меню-окне, 'restore' в следующем всплывающем меню-окне. В открышемся окне выбираем формат 'tar', в поле 'Backup file' нажимаем на значек папки, в открывшемся окно фаилов в имени фаила выбираем звездочку чтоб отображались все фаилы и открываем папку где лежит фаил и собственно выбираем наш 'tar' фаил.
-- Далее в окне выбора внизу слева в 'Local client' выбираем 'PostgreSQL Binaries'. Далее нажимаем 'Start'.
-- Дадлее БД будет создана, если будет Warning то пофиг, а если Errors то не очень
-- В tables теперь есть таблицы БД DVD Rental Sample Database


-- Чтобы в DBeaver выполнить запрос к БД:
-- В дереве на БД (у нас public) нажимаем правой кнопкой мыши -> 'SQL Editor' -> 'New SQL Script'. Появится окно-редактор где можно писать и исполнять запросы. Запустить запрос можно нажав оранжевый треугольник слева сверху этого окна, либо выделить запрос и нажать Ctrl+Enter. Снизу откроется окно с результатом
-- Можно перетаскивать названия в редактор прямо из дерева, если лень их писать
-- Можно выделять часть кода и запускать его отдельно
-- Можно выбрать таблицу, нажать правой кнопокой потом 'Genrrated SQL'  и выдаст окно с селект запросом на вывод всех полей с их перечислением, удобно чтобы не писать вручную все поля
-- При вставе запроса в окно редактора если нажать Ctrl+Shift+F то вставится в отформатированном виде



--                                              pgAdmin

-- https://www.pgadmin.org/                                                             - отдельный ресурс для pgAdmin 4
-- https://www.youtube.com/watch?v=HVQNxdI6fqY&list=PLBheEHDcG7-k1Y_Uy04Dj2ylWhcfSfqoF  - 56м основы работы


-- pgAdmin  - графическая среда PostgreSQL запускает сервер, открывается в браузере(у меня почемуто в своем окне открылась). Позволяет производить множество операций без ручного написания SQL. Спросит пароль заданный при установке PostgreSQL


-- Создание БД в pgAdmin 4:
-- 1. В дереве слева разворачиваем: Servers/PostgreSQL/Databases
-- 2. Правой кнопкой на Databases -> Create -> Database
-- 3. В появившемся окне задаем:
--   General          - имя БД, Owner/пользователь - можно оставить значение по умолчанию
--   Defenition       - можно оставить все по умолчанию
--   Connection Limit - ограничение на колич подключений к БД по умолчанию -1 те ограничений нет)
--   SQL              - показывает каким кодом на SQL будет создана эта БД)
--   Нажимаем Save и наша БД будет создана и появится в Servers/PostgreSQL/Databases/ИмяБД


-- Создание БД в pgAdmin 4 при помощи SQL:
-- 1. Нужно навестись на другую БД и нажать 'Query Tool'(кнопка сверху слева) - откроется окно в котором можно писать SQL код
-- 2. Напишем код запроса, например 'CREATE DATABASE testdb' Выполнить запрос кнопка 'Execute script' или клавиша F5
-- 3. Databases -> Refresh   - обновим дерево чтобы из него появилась ветвь удаленной БД


-- /Databases/postgres                                 - встроенная БД, которая содержит данные о пользователях и другую инфу
-- /Databases/ИмяБД/Schemas                            - схемы нашей БД (схемы агрегируют наборы таблиц, могут ограничивать определенные таблицы для определенных пользователекй)
-- /Databases/ИмяБД/Schemas/public                     - схема по умолчанию (если явно не указывать в какой схеме создаем таблицу, то она будет создана в этой схеме)
-- /Databases/ИмяБД/Schemas/public(или другая)/tables  - таблицы в этой схеме


-- Удаление БД в pgAdmin 4:
-- 1. Навестись на другую БД(не ту что удаляем) и нажать Query Tool(кнопка сверху слева) - откроется окно в котором можно писать SQL код
-- 2. У той БД которую хотим удалить не должен существовать сеанс подключения иначе возникнет ошибка, чтобы удалить сенас подключения напишем код (есть в CREATE_ALTER_DROP.sql). Выполнить запрос кнопка 'Execute script' или клавиша F5
-- 3. Напишем код удаления, например 'DROP DATABASE testdb' Выполнить запрос кнопка 'Execute script' или клавиша F5
-- 4. Databases -> Refresh   - обновим дерево чтобы из него пропала ветвь удаленной БД


-- Создание таблиц pgAdmin 4:
-- 1. Навестись на конкретную схему нашей БД, например public и открыть новую Query Tool
-- 2. Пишем и исполняем код одной или более таблиц и исполняем его(F5)
-- 3. Эти таблицы теперь есть в /Databases/ИмяБД/Schemas/public/tables
-- 4. Удалить таблицы можно так же


-- Заполнение таблиц pgAdmin 4:
-- нажать на нужную БД (например testdb)
-- нажать Query Tool и написать запрос и отаправить его(F5)


-- Чтобы в Query Tool выпонить только отдельный кусочек кода можно его выделить и нажать егзекьют(F5) (?? или альт + ф5 ??)

-- При нескольких запросах в Query Tool нужно разделить их точкой с запятой
















--
